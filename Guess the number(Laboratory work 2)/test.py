import unittest
from main import guess_number


class TestMath(unittest.TestCase):
    """
    Класс тестов для проверки алгоритмов поиска чисел.

    Содержит тестовые методы для проверки бинарного и линейного поиска,
    а также граничных случаев.
    """

    def test_bin(self):
        """
        Тест бинарного поиска существующего элемента.

        Проверяет, что бинарный поиск находит элемент за правильное количество шагов.
        В отсортированном массиве [1, 2, 3, 4, 5, 6, 7] число 4 находится за 1 шаг.
        """
        self.assertEqual(guess_number(4, [1, 2, 3, 4, 5, 6, 7], 'bin'), (4, 1))

    def test_seq(self):
        """
        Тест линейного поиска существующего элемента.

        Проверяет, что линейный поиск находит элемент за правильное количество шагов.
        В массиве [1, 2, 3, 4, 5, 6, 7] число 4 находится за 4 шага.
        """
        self.assertEqual(guess_number(4, [1, 2, 3, 4, 5, 6, 7], 'seq'), (4, 4))

    def test_zero_seq(self):
        """
        Тест линейного поиска в пустом массиве.

        Проверяет обработку пустого массива в линейном поиске.
        Ожидается возврат исходного числа и None в качестве количества шагов.
        """
        self.assertEqual(guess_number(4, [], 'seq'), (4, None))

    def test_zero_bin(self):
        """
        Тест бинарного поиска в пустом массиве.

        Проверяет обработку пустого массива в бинарном поиске.
        Ожидается возврат исходного числа и None в качестве количества шагов.
        """
        self.assertEqual(guess_number(3, [], 'bin'), (3, None))

    def test_out_of_range_bin(self):
        """
        Тест бинарного поиска отсутствующего элемента.

        Проверяет обработку случая, когда искомого числа нет в массиве
        при использовании бинарного поиска.
        """
        self.assertEqual(guess_number(9, [1, 2, 3, 4, 5, 6, 7], 'bin'), (9, None))

    def test_out_of_range_seq(self):
        """
        Тест линейного поиска отсутствующего элемента.

        Проверяет обработку случая, когда искомого числа нет в массиве
        при использовании линейного поиска.
        """
        self.assertEqual(guess_number(10, [1, 2, 3, 4, 5, 6, 7], 'seq'), (10, None))

    def test_error(self):
        """
        Тест линейного поиска отсутствующего элемента.

        Проверяет обработку случая, когда искомого числа нет в массиве
        при использовании линейного поиска.
        """
        self.assertEqual(guess_number("10", [1, 2, 3, 4, 5, 6, 7], 'seq'), ("10", None))


if __name__ == '__main__':
    unittest.main()
